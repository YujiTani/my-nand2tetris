/**
 * 16-bit adder: Adds two 16-bit two's complement values.
 * The most significant carry bit is ignored.
 */
CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    HalfAdder(a=a[0] , b=b[0] , sum=out[0] , carry=hC);
    FullAdder(a=a[1] , b=b[1] , c=hC , sum=out[1] , carry=fC1);
    FullAdder(a=a[2] , b=b[2] , c=fC1 , sum=out[2] , carry=fC2);
    FullAdder(a=a[3] , b=b[3] , c=fC2 , sum=out[3] , carry=fC3);
    FullAdder(a=a[4] , b=b[4] , c=fC3 , sum=out[4] , carry=fC4);
    FullAdder(a=a[5] , b=b[5] , c=fC4 , sum=out[5] , carry=fC5);
    FullAdder(a=a[6] , b=b[6] , c=fC5 , sum=out[6] , carry=fC6);
    FullAdder(a=a[7] , b=b[7] , c=fC6 , sum=out[7] , carry=fC7);
    FullAdder(a=a[8] , b=b[8] , c=fC7 , sum=out[8] , carry=fC8);
    FullAdder(a=a[9] , b=b[9] , c=fC8 , sum=out[9] , carry=fC9);
    FullAdder(a=a[10] , b=b[10] , c=fC9 , sum=out[10] , carry=fC10);
    FullAdder(a=a[11] , b=b[11] , c=fC10 , sum=out[11] , carry=fC11);
    FullAdder(a=a[12] , b=b[12] , c=fC11 , sum=out[12] , carry=fC12);
    FullAdder(a=a[13] , b=b[13] , c=fC12 , sum=out[13] , carry=fC13);
    FullAdder(a=a[14] , b=b[14] , c=fC13 , sum=out[14] , carry=fC14);
    FullAdder(a=a[15] , b=b[15] , c=fC14 , sum=out[15] , carry=fC15);
}
